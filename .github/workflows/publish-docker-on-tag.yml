name: Publish Docker on Tag

on:
  push:
    tags:
      - bobapp-back-v*
      - bobapp-frontend-v*
  release:
    types: [published]

#  branches:
#    - workflow-test-*
#  workflow_dispatch:
#    inputs:
#      tag_name:
#        description: 'Tag à tester'
#        required: true
#        default: 'back-v1.2.3'

permissions:
  contents: read

jobs:
#  test-parsing:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Debug - Afficher toutes les variables
#        shell: bash
#        run: |
#          echo "=== Variables GitHub ==="
#          echo "GITHUB_REF_NAME: ${GITHUB_REF_NAME}"
#          echo "GITHUB_REF: ${GITHUB_REF}"
#          echo "GITHUB_EVENT_NAME: ${GITHUB_EVENT_NAME}"
#
#          echo "=== Test du parsing ==="
#          REF_NAME="${GITHUB_REF_NAME}"
#          echo "REF_NAME: $REF_NAME"
#          echo "Component (extraction): ${REF_NAME%%-*}"
#          echo "Version (extraction): ${REF_NAME#*-v}"
#
#          echo "=== test Pattern ==="
#          if [[ "$REF_NAME" == back-v* ]]; then
#            echo "✅ Match back-v*"
#          else
#            echo "❌ No match back-v*"
#          fi
#
#          if [[ "$REF_NAME" == front-v* ]]; then
#            echo "✅ Match front-v*"
#          else
#            echo "❌ No match front-v*"
#          fi
#
#      - name: Test avec tag personnalisé
#        shell: bash
#        run: |
#          echo "=== Input reçu: ${{ github.event.inputs.tag_name }} ==="
#          echo "=== Test avec tag input ==="
#
#          REF_NAME="${{ github.event.inputs.tag_name }}"
#          echo "REF_NAME testé: $REF_NAME"
#
#          if [[ "$REF_NAME" == back-v* ]]; then echo "component=back" >> $GITHUB_OUTPUT; fi
#          if [[ "$REF_NAME" == front-v* ]]; then echo "component=front" >> $GITHUB_OUTPUT; fi
#          VERSION="${REF_NAME#*-v}"
#          echo "version=${VERSION}" >> $GITHUB_OUTPUT
#
#          echo "=== Résultats ==="
#          cat $GITHUB_OUTPUT

  publish:
    name: Build and push version images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Déterminer composant et version
        id: info
        shell: bash
        run: |
          REF_NAME="${GITHUB_REF_NAME}"  # exemples : bobapp-back-v1.2.3 ou bobapp-frontend-v1.2.3
          if [[ "$REF_NAME" == bobapp-back-v* ]]; then echo "component=back" >> $GITHUB_OUTPUT; fi
          if [[ "$REF_NAME" == bobapp-frontend-v* ]]; then echo "component=front" >> $GITHUB_OUTPUT; fi
          # Extraire la partie après le dernier '-v'
          VERSION="${REF_NAME##*-v}" # bobapp-back-v1.2.3 devient 1.2.3
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "Infos : component=${REF_NAME%%-*}, path=${{ steps.info.outputs.component }}, version=${VERSION}"

      - name: Build and push image (latest + version)
        uses: docker/build-push-action@v6.18.0
        with:
          context: ./${{ steps.info.outputs.component }}
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/bobapp-${{ steps.info.outputs.component }}:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/bobapp-${{ steps.info.outputs.component }}:${{ steps.info.outputs.version }}
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ steps.info.outputs.version }}
