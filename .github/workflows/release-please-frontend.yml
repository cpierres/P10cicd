name: Release Please Frontend

on:
  workflow_run:
    workflows: ["Frontend CI"]
    types: [completed]
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  release-please-frontend:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: googleapis/release-please-action@v4.0.0
        id: release_please
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: .github/release-please-config-frontend.json
          manifest-file: .github/.release-please-manifest-frontend.json

      - name: Debug - Variables et outputs Release Please
        shell: bash
        run: |
            echo "=== GitHub Context ==="
            echo "event_name: $GITHUB_EVENT_NAME"
            echo "ref:        $GITHUB_REF"
            echo "ref_name:   $GITHUB_REF_NAME"
            echo "sha:        $GITHUB_SHA"
            echo "actor:      $GITHUB_ACTOR"
            echo "workflow:   $GITHUB_WORKFLOW"
            echo "run_id:     $GITHUB_RUN_ID"
            echo "run_number: $GITHUB_RUN_NUMBER"
            echo
            echo "=== Outputs Release Please (manifest-scoped) ==="
            echo "front--release_created: ${{ steps.release_please.outputs['front--release_created'] }}"
            echo "front--tag_name:        ${{ steps.release_please.outputs['front--tag_name'] }}"
            echo "front--major:           ${{ steps.release_please.outputs['front--major'] }}"
            echo "front--minor:           ${{ steps.release_please.outputs['front--minor'] }}"
            echo
            echo "=== Outputs Release Please (fallback génériques) ==="
            echo "release_created:        ${{ steps.release_please.outputs.release_created }}"
            echo "releases_created:       ${{ steps.release_please.outputs.releases_created }}"
            echo "tag_name:               ${{ steps.release_please.outputs.tag_name }}"
            echo "major:                  ${{ steps.release_please.outputs.major }}"
            echo "minor:                  ${{ steps.release_please.outputs.minor }}"


      - name: Login to Docker Hub
        if: ${{ steps.release_please.outputs['front--release_created'] == 'true' || steps.release_please.outputs.release_created == 'true' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Déterminer la version d'image
        id: info
        if: ${{ steps.release_please.outputs['front--release_created'] == 'true' || steps.release_please.outputs.release_created == 'true' }}
        shell: bash
        env:
          FRONT_TAG: ${{ steps.release_please.outputs['front--tag_name'] }}
          GENERIC_TAG: ${{ steps.release_please.outputs.tag_name }}
        run: |
          TAG=""
          if [[ -n "$FRONT_TAG" ]]; then
            TAG="$FRONT_TAG"
          elif [[ -n "$GENERIC_TAG" ]]; then
            TAG="$GENERIC_TAG"
          fi

          if [[ -z "$TAG" ]]; then
            echo "Aucun tag_name disponible (aucune release créée ou sortie indisponible). Skip."
            exit 0
          fi

          # Extrait la version: supporte "bobapp-frontend-vX.Y.Z" ou "vX.Y.Z"
          if [[ "$TAG" == *"-v"* ]]; then
            VERSION="${TAG##*-v}"
          else
            VERSION="${TAG#v}"
          fi

          echo "component=frontend" >> "$GITHUB_OUTPUT"
          echo "version=${VERSION}" >> "$GITHUB_OUTPUT"
          echo "Tag détecté: ${TAG} -> version=${VERSION}"

      - name: Build and push Docker image (latest + version)
        if: ${{ steps.release_please.outputs['front--release_created'] == 'true' || steps.release_please.outputs.release_created == 'true' }}
        uses: docker/build-push-action@v6.18.0
        with:
          context: ./front
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/bobapp-frontend:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/bobapp-frontend:${{ steps.info.outputs.version }}
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ steps.info.outputs.version }}
