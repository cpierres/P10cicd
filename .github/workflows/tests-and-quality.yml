# Nom du workflow qui appara√Ætra dans l'interface GitHub
name: Run Tests

# D√©finit quand le workflow sera d√©clench√©
on:
  # Se d√©clenche lors d'un push sur la branche main
  push:
    branches: [ main ]
  # Se d√©clenche lors d'une PR vers la branche main
  pull_request:
    branches: [ main ]

# Liste des jobs √† ex√©cuter
jobs:
  # D√©finition du job
  backend-tests:
    # Utilise la derni√®re version d'Ubuntu comme environnement d'ex√©cution
    runs-on: ubuntu-latest
    # Configure le r√©pertoire de travail par d√©faut pour toutes les commandes
    defaults:
      run:
        working-directory: ./back

    # Liste des √©tapes √† ex√©cuter dans ce job
    steps:
      # R√©cup√®re le code source du d√©p√¥t
      - uses: actions/checkout@v4

      # Configure Java 11 pour l'environnement
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'     # Utiliser JDK 11 comme dans le projet (note : sonar r√©clame le 17)
          distribution: 'adopt'
          cache: maven           # Active le cache Maven (survit √† la destruction du container)

      # compilation s√©par√©e pour plus de lisibilit√©
      - name: Build project
        run: mvn compile test-compile #note : clean initial ne servirait pas puisque d√©marre vierge

      # Ex√©cute les tests avec Maven (pas de tests d'int√©gration dans cette appli donc mvn verify inutile)
      - name: Run tests with Maven
        run: mvn test
        continue-on-error: true  # Continuer m√™me si les tests √©chouent

      # G√©n√®re le rapport de couverture JaCoCo
      - name: Generate JaCoCo Report
        run: mvn jacoco:report
        if: always()  # Ex√©cuter m√™me si l'√©tape pr√©c√©dente √©choue

      # Upload rapport JaCoCo comme artefact => stock√© dans infra github (sera utile au job Sonar)
      - name: Upload JaCoCo coverage report
        uses: actions/upload-artifact@v4
        if: always()    # S'ex√©cute m√™me si les √©tapes pr√©c√©dentes √©chouent
        with:
          name: jacoco-report    # Nom de l'artefact
          path: back/target/site/jacoco/  # Chemin vers les rapports
          retention-days: 1  # inutile de garder plus d'1 jour

       # Afficher le rapport et faire √©chouer PR √©ventuellement si en-dessous d'un seuil
      - name: JaCoCo Code Coverage Report
        id: jacoco_reporter
        uses: PavanMudigonda/jacoco-reporter@v5.0
        if: always()  # Ex√©cuter m√™me si les √©tapes pr√©c√©dentes √©chouent
        with:
          coverage_results_path: back/target/site/jacoco/jacoco.xml
          coverage_report_name: backend-coverage
          coverage_report_title: JaCoCo Coverage Report
          github_token: ${{ secrets.GITHUB_TOKEN }}
          skip_check_run: false
          minimum_coverage: 80
          fail_below_threshold: false
          publish_only_summary: false

      - name: Upload backend-classes # partag√©es avec le job Sonar (classes compil√©es utiles ind√©pendamment des src)
        uses: actions/upload-artifact@v4
        if: always()  # Ex√©cuter m√™me si les √©tapes pr√©c√©dentes √©chouent
        with:
          name: backend-classes
          path: |
            back/target/classes
            back/target/test-classes
          retention-days: 1

      # Publie les r√©sultats des tests JUnit
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v5
        with:
          report_paths: '**/target/surefire-reports/TEST-*.xml'  # Chemin des rapports
          fail_on_failure: false

  frontend-tests:
    runs-on: ubuntu-latest
    # Configure le r√©pertoire de travail par d√©faut pour les commandes
    defaults:
      run:
        working-directory: ./front

    # Liste des √©tapes √† ex√©cuter dans l'ordre s√©quentiel
    steps:
      # R√©cup√®re le code source du d√©p√¥t (checkout)
      - uses: actions/checkout@v4

      # Configure l'environnement Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          # Sp√©cifie la version de Node.js du projet
          node-version: '14'
          # Active le cache pour npm pour acc√©l√©rer les installations futures
          cache: 'npm'
          # Chemin vers le fichier package-lock.json pour la mise en cache des d√©pendances
          cache-dependency-path: './front/package-lock.json'

      # Installe les d√©pendances du projet frontend
      # 'npm ci' est similaire √† 'npm install' mais plus strict et adapt√© aux environnements CI
      - name: Install dependencies
        run: npm ci # fait install et le build

      # Ex√©cute les tests du frontend avec les options sp√©cifi√©es :
      # --no-watch : ne surveille pas les changements de fichiers (mode CI)
      # --no-progress : d√©sactive la barre de progression
      # --browsers=ChromeHeadless : utilise Chrome en mode headless (sans interface graphique)
      # --code-coverage : g√©n√®re des rapports de couverture de code
      - name: Run tests
        run: npm test -- --no-watch --no-progress --browsers=ChromeHeadless --code-coverage
        continue-on-error: true  # Continuer m√™me si les tests √©chouent

      # Upload les rapports de couverture g√©n√©r√©s comme artefact
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        if: always()  # Ex√©cuter m√™me si l'√©tape pr√©c√©dente √©choue
        with:
          # Nom de l'artefact qui sera visible dans l'interface GitHub
          name: angular-coverage
          # Chemin vers le dossier contenant les rapports de couverture g√©n√©r√©s
          path: front/coverage/

  # Analyse SonarCloud avec JDK 17 (version minimale obligatoire)
  sonarcloud-analysis:
    needs: [backend-tests, frontend-tests]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Utile car permet √† Sonar d'effectuer des comparaisons (compare PR √† branche cible + analyse incr√©mentale)

      - name: Configuration JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      # upload des artefacts g√©n√©r√©s lors des tests backend
      - name: T√©l√©chargement du rapport JaCoCo
        uses: actions/download-artifact@v4
        with:
          name: jacoco-report
          path: back/target/site/jacoco/

      - name: T√©l√©chargement des classes backend
        uses: actions/download-artifact@v4
        with:
          name: backend-classes
          path: back/target/

      # upload des artefacts g√©n√©r√©s lors des tests frontend
      - name: T√©l√©chargement du rapport de couverture Angular
        uses: actions/download-artifact@v4
        with:
          name: angular-coverage
          path: front/coverage/

      - name: Analyse SonarCloud
        uses: SonarSource/sonarqube-scan-action@v5.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io

      - name: Lien SonarCloud
        if: always()
        run: |
          echo "::notice title=üìä Rapport SonarCloud::https://sonarcloud.io/project/overview?id=${{ github.repository_owner }}_${{ github.event.repository.name }}"
